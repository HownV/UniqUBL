//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceTesting.DataAccessService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/UniqUDomainModel.Entities")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordHashField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PasswordHash {
            get {
                return this.PasswordHashField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordHashField, value) != true)) {
                    this.PasswordHashField = value;
                    this.RaisePropertyChanged("PasswordHash");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DataAccessService.IDataAccessService")]
    public interface IDataAccessService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataAccessService/GetEcho", ReplyAction="http://tempuri.org/IDataAccessService/GetEchoResponse")]
        string GetEcho(string echo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataAccessService/GetEcho", ReplyAction="http://tempuri.org/IDataAccessService/GetEchoResponse")]
        System.Threading.Tasks.Task<string> GetEchoAsync(string echo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataAccessService/GetUser", ReplyAction="http://tempuri.org/IDataAccessService/GetUserResponse")]
        ServiceTesting.DataAccessService.User[] GetUser(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataAccessService/GetUser", ReplyAction="http://tempuri.org/IDataAccessService/GetUserResponse")]
        System.Threading.Tasks.Task<ServiceTesting.DataAccessService.User[]> GetUserAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataAccessService/AddUser", ReplyAction="http://tempuri.org/IDataAccessService/AddUserResponse")]
        void AddUser(string email, string passwordHash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataAccessService/AddUser", ReplyAction="http://tempuri.org/IDataAccessService/AddUserResponse")]
        System.Threading.Tasks.Task AddUserAsync(string email, string passwordHash);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDataAccessServiceChannel : ServiceTesting.DataAccessService.IDataAccessService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DataAccessServiceClient : System.ServiceModel.ClientBase<ServiceTesting.DataAccessService.IDataAccessService>, ServiceTesting.DataAccessService.IDataAccessService {
        
        public DataAccessServiceClient() {
        }
        
        public DataAccessServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DataAccessServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataAccessServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataAccessServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetEcho(string echo) {
            return base.Channel.GetEcho(echo);
        }
        
        public System.Threading.Tasks.Task<string> GetEchoAsync(string echo) {
            return base.Channel.GetEchoAsync(echo);
        }
        
        public ServiceTesting.DataAccessService.User[] GetUser(string email) {
            return base.Channel.GetUser(email);
        }
        
        public System.Threading.Tasks.Task<ServiceTesting.DataAccessService.User[]> GetUserAsync(string email) {
            return base.Channel.GetUserAsync(email);
        }
        
        public void AddUser(string email, string passwordHash) {
            base.Channel.AddUser(email, passwordHash);
        }
        
        public System.Threading.Tasks.Task AddUserAsync(string email, string passwordHash) {
            return base.Channel.AddUserAsync(email, passwordHash);
        }
    }
}
